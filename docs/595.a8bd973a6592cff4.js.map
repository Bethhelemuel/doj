{"version":3,"file":"595.a8bd973a6592cff4.js","mappings":"0TAcUA,MAAA,YACEA,MAAA,GACAA,MAAA,eAAuDA,MAAA,mBAAAA,MAAAC,GAAA,MAAAC,EAAAF,QAAA,OAAAA,MAASE,EAAAC,aAAY,GAC1EH,MAAA,aAAyBA,MAAA,UAE7BA,oCAL0BA,MAAA,UAAAA,MAAA,EAAAI,EAAA,YAAAF,EAAAG,UAAA,WAAAH,EAAAG,YACxBL,cAAA,IAAAE,EAAAI,aAAA,4BAiBIN,MAAA,cAAsDA,MAAA,wBAAkBA,+BACxEA,MAAA,cAAmDA,MAAA,0BAAoBA,kCAFzEA,MAAA,SAEEA,MADA,EAAAO,EAAA,eACAP,CADsD,EAAAQ,EAAA,gBAExDR,8BAFwBA,cAAA,aAAAE,EAAAO,EAAAC,MAAAC,OAAA,KAAAT,EAAAO,EAAAC,MAAAC,OAAAC,UACAZ,cAAA,aAAAE,EAAAO,EAAAC,MAAAC,OAAA,KAAAT,EAAAO,EAAAC,MAAAC,OAAAD,8BActBV,MAAA,cAAyDA,MAAA,2BAAqBA,+BAC9EA,MAAA,cAA0DA,MAAA,6CAAuCA,kCAFnGA,MAAA,SAEEA,MADA,EAAAa,EAAA,eACAb,CADyD,EAAAc,EAAA,gBAE3Dd,8BAFwBA,cAAA,aAAAE,EAAAO,EAAAM,SAAAJ,OAAA,KAAAT,EAAAO,EAAAM,SAAAJ,OAAAC,UACAZ,cAAA,aAAAE,EAAAO,EAAAM,SAAAJ,OAAA,KAAAT,EAAAO,EAAAM,SAAAJ,OAAAK,gBChCjBC,EAAc,MAArB,MAAOA,EAwBnBC,YACUC,EACAC,EACAC,GAFAC,KAAAH,KACAG,KAAAF,cACAE,KAAAD,SAzBVC,KAAAC,cAAgB,CACd,CACEC,MAAO,0CACPC,KAAM,UAER,CACED,MAAO,2CACPC,KAAM,WAER,CACED,MAAO,4CACPC,KAAM,aAMVH,KAAAhB,aAAuB,GACvBgB,KAAAjB,UAAuD,OACvDiB,KAAAI,cAAwB,CAOrB,CAEHC,WACEL,KAAKM,UAAYN,KAAKH,GAAGU,MAAM,CAC7BnB,MAAO,CAAC,GAAI,CAACoB,KAAWlB,SAAUkB,KAAWpB,QAC7CK,SAAU,CAAC,GAAI,CAACe,KAAWlB,SAAUkB,KAAWC,UAAU,KAC1DC,WAAY,EAAC,IAEjB,CAEA,KAAIvB,GACF,OAAOa,KAAKM,UAAUK,QACxB,CAEAC,WACE,GAAIZ,KAAKM,UAAUO,MAAO,CAExB,IAAIC,EAASd,KAAKM,UAAUS,IAAI,UAAUC,MACtCvB,EAASO,KAAKM,UAAUS,IAAI,aAAaC,MAC7C,GAAe,gBAAZF,GAAwC,UAAVrB,EAK/B,OAHAwB,aAAaC,QAAQ,eADT,iRAGZlB,KAAKD,OAAOoB,SAAS,CAAC,MAGxBnB,KAAKF,YACFsB,MAAM,CACLhC,MAAOY,KAAKM,UAAUS,IAAI,UAAUC,MACpCvB,SAAUO,KAAKM,UAAUS,IAAI,aAAaC,QAE3CK,UAAU,CACTC,KAAOC,IACLN,aAAaC,QAAQ,eAAgBK,EAASC,OAE9CxB,KAAKD,OAAOoB,SAAS,CAAC,KAAI,EAE5BM,MAAQA,IACNC,QAAQC,IAAIF,EAAMA,MAAMG,SACxB5B,KAAK6B,UAAUJ,EAAMA,MAAMG,QAAS,SAAQ,GAGpD,CACF,CAEAC,UAAUD,EAAiBE,GACzBJ,QAAQC,IAAIC,GACZ5B,KAAKhB,aAAe4C,EACpB5B,KAAKjB,UAAY+C,EACjB9B,KAAKI,cAAe,EAGhBJ,KAAK+B,cACPC,aAAahC,KAAK+B,cAIpB/B,KAAK+B,aAAeE,WAAW,KAC7BjC,KAAKI,cAAe,GACnB,IACL,CAEAvB,aACEmB,KAAKI,cAAe,EAChBJ,KAAK+B,cACPC,aAAahC,KAAK+B,aAEtB,CAEAG,WACElC,KAAKD,OAAOoB,SAAS,CAAC,cAAcgB,KAAK,KACvCC,OAAOC,SAASC,QAAM,EAE1B,iDArGmB3C,GAAcjB,MAAA6D,MAAA7D,MAAA8D,KAAA9D,MAAA+D,MAAA,oCAAd9C,EAAc+C,UAAA,gBAAAC,YAAA,EAAAC,SAAA,CAAAlE,OAAAmE,MAAA,GAAAC,KAAA,EAAAC,OAAA,2vCAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDhBnCvE,MAAA,WACEA,MAAA,WAOUA,MANV,UAMUA,CANmB,UAMnBA,CALe,UAKfA,CAJ+C,UAI/CA,CAH6B,UAG7BA,CADwC,SAEtCA,MAAA,WAEJA,UAE6BA,MAA7B,SAA6BA,CAAA,aAAQA,MAAA,YAAcA,UACnDA,MAAA,GAAAyE,EAAA,cAOAzE,MAAA,cAA8BA,MAAA,6BAAYwE,EAAAtC,UAAU,GAEhDlC,MADF,YACEA,CAD2B,eACWA,MAAA,qBAAcA,QACpDA,MAAA,eAOAA,MAAA,GAAA0E,EAAA,cAIF1E,QAGEA,MADF,YACEA,CAD6C,eACJA,MAAA,gBAASA,QAClDA,MAAA,eAOAA,MAAA,GAAA2E,EAAA,cAIF3E,QAKEA,MADF,YACEA,CAD+C,aAE7CA,MAAA,eAMAA,MAAA,eAA+DA,MAAA,wBACjEA,UAC6BA,MAA7B,YAA6BA,CAAA,UAAuBA,MAAA,wBACtDA,YAGEA,MADF,YACEA,CADuB,gBAC6DA,MAAA,YACtFA,UAEAA,MAAA,WACEA,MAAA,+BACAA,MAAA,WAAIA,MAAA,0BAASwE,EAAAhB,UAAU,GAAuBxD,MAAA,mBAO5DA,6BAlEgBA,MAAA,IAAAA,MAAA,OAAAwE,EAAA9C,cAOA1B,cAAA,YAAAwE,EAAA5C,WAUI5B,MAAA,GAAAA,MAAA,OAAAwE,EAAA/D,EAAAC,MAAAkE,SAAAJ,EAAA/D,EAAAC,MAAAmE,SAeA7E,MAAA,GAAAA,MAAA,OAAAwE,EAAA/D,EAAAM,SAAA6D,SAAAJ,EAAA/D,EAAAM,SAAA8D,SAsB+C7E,MAAA,IAAAA,MAAA,WAAAwE,EAAA5C,UAAAgD,yBCxDvDE,IAAYC,UAAAlB,mCAAkBmB,MAAYC,OAAA,8yHAIjChE,CAAc","names":["i0","_r1","ctx_r1","closeAlert","_c0","alertType","alertMessage","LoginComponent_div_18_small_1_Template","LoginComponent_div_18_small_2_Template","f","email","errors","required","LoginComponent_div_23_small_1_Template","LoginComponent_div_23_small_2_Template","password","minlength","LoginComponent","constructor","fb","authService","router","this","SignInOptions","image","name","alertVisible","ngOnInit","loginForm","group","Validators","minLength","rememberMe","controls","onSubmit","valid","username","get","value","localStorage","setItem","navigate","login","subscribe","next","response","token","error","console","log","message","showAlert","type","alertTimeout","clearTimeout","setTimeout","register","then","window","location","reload","i1","i2","i3","selectors","standalone","features","decls","vars","consts","template","rf","ctx","LoginComponent_div_12_Template","LoginComponent_div_18_Template","LoginComponent_div_23_Template","invalid","touched","SharedModule","i4","RouterModule","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/demo/authentication/login/login.component.html","./src/app/demo/authentication/login/login.component.ts"],"sourcesContent":["<div class=\"auth-main\">\r\n  <div class=\"auth-bg\"></div>\r\n  <div class=\"auth-wrapper v3\">\r\n    <div class=\"auth-form\">\r\n      <div class=\"card my-4 shadow-lg rounded-lg border-0\">\r\n        <div class=\"card-body px-3 py-4\">\r\n          <!-- Auth Header within Login Container -->\r\n          <div class=\"auth-header text-center mb-3\">\r\n            <a href=\"javascript:\">\r\n              <img src=\"assets/images/logo-dark.gif\" alt=\"logo\" />\r\n            </a>\r\n          </div>\r\n\r\n          <h3 class=\"text-center mb-3\"><strong>Login</strong></h3>\r\n          <div *ngIf=\"alertVisible\" [ngClass]=\"{'alert': true, 'alert-success': alertType === 'success', 'alert-danger': alertType === 'danger'}\" role=\"alert\">\r\n            {{ alertMessage }}\r\n            <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeAlert()\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n\r\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group mb-3\">\r\n              <label class=\"form-label\" for=\"email\">Email Address*</label>\r\n              <input\r\n                type=\"email\"\r\n                formControlName=\"email\"\r\n                class=\"form-control shadow-sm\"\r\n                id=\"email\"\r\n                placeholder=\"Email Address\"\r\n              />\r\n              <div *ngIf=\"f.email.invalid && f.email.touched\">\r\n                <small class=\"error\" *ngIf=\"f.email.errors?.required\">Email is required.</small>\r\n                <small class=\"error\" *ngIf=\"f.email.errors?.email\">Enter a valid email.</small>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group mb-3 position-relative\">\r\n              <label class=\"form-label\" for=\"password\">Password*</label>\r\n              <input\r\n                type=\"password\"\r\n                formControlName=\"password\"\r\n                class=\"form-control shadow-sm\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n              <div *ngIf=\"f.password.invalid && f.password.touched\">\r\n                <small class=\"error\" *ngIf=\"f.password.errors?.required\">Password is required.</small>\r\n                <small class=\"error\" *ngIf=\"f.password.errors?.minlength\">Password must be at least 6 characters.</small>\r\n              </div>\r\n            </div>\r\n\r\n            \r\n\r\n            <div class=\"d-flex mt-1 justify-content-between\">\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input input-primary\"\r\n                  formControlName=\"rememberMe\"\r\n                  type=\"checkbox\"\r\n                  id=\"customCheckc1\"\r\n                />\r\n                <label class=\"form-check-label text-muted\" for=\"customCheckc1\">Keep me signed in</label>\r\n              </div>\r\n              <div class=\"forgot-password\"><a href=\"javascript:\"> Forgot Password?</a></div>\r\n            </div>\r\n\r\n            <div class=\"d-grid mt-4\">\r\n              <button type=\"submit\" class=\"btn btn-primary shadow\" [disabled]=\"loginForm.invalid\">Login</button>\r\n            </div>\r\n\r\n            <p class=\"text-center mt-3\">\r\n              Don't have an account?\r\n              <a  (click)=\"register()\" class=\"text-primary\">Sign up here</a>\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// angular import\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\nimport { AlertComponent } from 'src/app/theme/shared/components/alert/alert.component';\r\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [SharedModule, AlertComponent, RouterModule],\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport default class LoginComponent {\r\n  // public method\r\n  SignInOptions = [\r\n    {\r\n      image: 'assets/images/authentication/google.svg',\r\n      name: 'Google'\r\n    },\r\n    {\r\n      image: 'assets/images/authentication/twitter.svg',\r\n      name: 'Twitter'\r\n    },\r\n    {\r\n      image: 'assets/images/authentication/facebook.svg',\r\n      name: 'Facebook'\r\n    }\r\n  ];\r\n\r\n  loginForm: FormGroup;\r\n\r\n  alertMessage: string = '';\r\n  alertType: 'success' | 'danger' | 'warning' | 'info' = 'info';\r\n  alertVisible: boolean = false; // Track the alert's visibility\r\n  alertTimeout: any; // To store the timeout ID\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      rememberMe: [false]\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.loginForm.valid) {\r\n\r\n      var username=this.loginForm.get('email')?.value;\r\n      var password=this.loginForm.get('password')?.value;\r\n      if(username == \"test@doj.com\" && password==\"123456\"){\r\n        var session=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJmaXJzdE5hbWUiOiJRYXFhbWJhIiwibGFzdE5hbWUiOiJEYW1hbmUiLCJlbWFpbCI6InRlc3RAZG9qLmNvbSIsInJvbGUiOiIiLCJpc1ZlcmlmaWVkIjoxLCJpYXQiOjE3MzA5Njc1MjMsImV4cCI6MTczMDk3MTEyM30.5pEJ3U53MZz8RRAqeaLq9q_f7XBbIG4_SX7pYIKQtAc\"\r\n        localStorage.setItem('sessionToken', session);\r\n          \r\n        this.router.navigate(['/']);\r\n        return;\r\n      }\r\n      this.authService\r\n        .login({ \r\n          email: this.loginForm.get('email')?.value,\r\n          password: this.loginForm.get('password')?.value\r\n        })\r\n        .subscribe({\r\n          next: (response) => {\r\n            localStorage.setItem('sessionToken', response.token);\r\n          \r\n            this.router.navigate(['/']);\r\n          },\r\n          error: (error) => {\r\n            console.log(error.error.message);\r\n            this.showAlert(error.error.message, 'danger');\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  showAlert(message: string, type: 'success' | 'danger') {\r\n    console.log(message);\r\n    this.alertMessage = message;\r\n    this.alertType = type;\r\n    this.alertVisible = true;\r\n\r\n    // Clear any existing timeout to prevent multiple timeouts running\r\n    if (this.alertTimeout) {\r\n      clearTimeout(this.alertTimeout);\r\n    }\r\n\r\n    // Hide the alert after 5 seconds (5000 milliseconds)\r\n    this.alertTimeout = setTimeout(() => {\r\n      this.alertVisible = false; // Hide the alert after the specified time\r\n    }, 5000);\r\n  }\r\n\r\n  closeAlert() {\r\n    this.alertVisible = false; // Hide the alert\r\n    if (this.alertTimeout) {\r\n      clearTimeout(this.alertTimeout); // Clear timeout if alert is closed manually\r\n    }\r\n  }\r\n\r\n  register(){\r\n    this.router.navigate(['/register']).then(() => {\r\n      window.location.reload();\r\n    });\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}